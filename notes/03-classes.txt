Classes in Javascript.

So techncially Javascript does NOT have classes in the same way as Java or Ruby. However, ES6 did introduce syntax
for object creation using the class keyword. On the surface, its the exact same as traditional Object Oriented Programming languages.
However, its an important distinction that they are differet systems under the hood, and that there are potential problems
that can arise from assuming that ES6 classes operate like traditional OOP classes. Opponents argue that the Javascript
Es6 class system is syntactic sugar that can be potentially dangerous and misleading.

Despite the controversy, classes are beginning to crop up in real code bases.
THe people at the Odin Project approve of classes and think they are fine to use.
However I SHOULD learn how to use prototypes as well, I can't use classes just because they're comfortable.

Lesson Overview:
Describe the pros and cons of using classes in Javascript
Briefly Discuss how Javascript's object creation differs from a language like Java or Ruby
Explain the differences between an object constructor and a class.
Explain what "getters" and "setters" are.
Explain how to implement private class fields and methods.
Describe function binding.
Use Inheritance with classes.
Understand why composition is generally preferred to inheritance.



1. Property getters and setters:
    There are two kinds of object properties.
        a. data properties.
            self explanatory

        b. accessor property:
            Functions that execute on getting and setting a value, but look like regular properties to an external code.

            let obj = {
                get propName(){
                    //getter, the code executed on getting obj.propName
                }
                set propName(value){
                    //setter, teh code executed on setting obj.propName = value;
                }
            }   

    The getter works when obj.propName is read, the setter - when it is assigned.

    For instance: We have a user with a first and last name, and we want to return the full name.
    let user = {
        name: "John",
        surname: "Smith"
    };

      get fullName() {
            return `${this.name} ${this.surname}`;
    }

